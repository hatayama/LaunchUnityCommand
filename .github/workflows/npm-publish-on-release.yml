name: npm publish on release

on:
  workflow_run:
    workflows: ["release-please"]
    types: [completed]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  publish:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha || github.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
      - name: Decide whether to publish
        id: plan
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -e
          PACKAGE=$(node -p "require('./package.json').name")
          VERSION=$(node -p "require('./package.json').version")
          echo "package=$PACKAGE" >> "$GITHUB_OUTPUT"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          if gh release view "v$VERSION" >/dev/null 2>&1; then
            echo "has_release=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_release=false" >> "$GITHUB_OUTPUT"
          fi
          if npm view "${PACKAGE}@${VERSION}" version >/dev/null 2>&1; then
            echo "already=true" >> "$GITHUB_OUTPUT"
          else
            echo "already=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Show plan
        run: |
          echo "package=${{ steps.plan.outputs.package }}"
          echo "version=${{ steps.plan.outputs.version }}"
          echo "has_release=${{ steps.plan.outputs.has_release }}"
          echo "already=${{ steps.plan.outputs.already }}"
      - name: Install
        if: ${{ steps.plan.outputs.has_release == 'true' && steps.plan.outputs.already != 'true' }}
        run: npm ci
      - name: Publish
        if: ${{ steps.plan.outputs.has_release == 'true' && steps.plan.outputs.already != 'true' }}
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


